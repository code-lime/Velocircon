name: Publish to GitHub Packages

on:
  push:
    tags: [ "*" ]
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write
  packages: write

env:
  GITHUB_OWNER: ${{ github.repository_owner }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_REPOSITORY: ${{ github.repository }}
  GITHUB_PACKAGE_USERNAME: ${{ github.repository_owner }}
  GITHUB_PACKAGE_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'oracle'

      - name: Make Gradle Wrapper Executable
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Build
        run: ./gradlew build

      - name: Get single output jar
        id: output_jar
        run: echo "JAR=$(ls -1 build/libs/*.jar | grep -v '\-sources\.jar' | head -n 1)" >> $GITHUB_OUTPUT

      - name: Extract metadata
        id: metadata
        run: |
          JAR_PATH=${{ steps.output_jar.outputs.JAR }}
          JSON_IN_JAR=velocity-plugin.json
          JSON_OUT=build/libs/metadata.json
      
          unzip -p "$JAR_PATH" "$JSON_IN_JAR" > "$JSON_OUT"
      
          if [ -s "$JSON_OUT" ]; then
            echo "METADATA=$JSON_OUT" >> $GITHUB_OUTPUT
          else
            echo "JSON file not found or empty!"
            exit 1
          fi

      - name: Upload archive to artifact
        uses: actions/upload-artifact@v4
        with:
          name: jars
          path: |
            ${{ steps.output_jar.outputs.JAR }}
            ${{ steps.metadata.outputs.METADATA }}
  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_type == 'tag'
    steps:
      - name: Download archive's from artifact
        uses: actions/download-artifact@v4
        with:
          name: jars
          path: .
      - name: Read metadata
        id: metadata
        run: |
          CONFIG_FILE=metadata.json

          jq -r '.name as $v | "name=\($v)"' "$CONFIG_FILE" >> "$GITHUB_OUTPUT"
          jq -r '.version as $v | "version=\($v)"' "$CONFIG_FILE" >> "$GITHUB_OUTPUT"
      - name: Collect .jar files
        id: jars
        run: |
          FILES=$(find . -type f -name "*.jar" | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "files=$FILES" >> $GITHUB_OUTPUT
      - name: Modrinth Release
        uses: cloudnode-pro/modrinth-publish@v2
        if: false
        with:
          project: ${{ vars.MODRINTH_PROJECT_ID }}
          version: ${{ steps.metadata.outputs.version }}
          loaders: 'velocity'
          game-versions: '["1.8.x","1.9.x","1.10.x","1.11.x","1.12.x","1.13.x","1.14.x","1.15.x","1.16.x","1.17.x","1.18.x","1.19.x","1.20.x","1.21.x"]'
          token: ${{ secrets.MODRINTH_TOKEN }}
          files: ${{ steps.jars.outputs.files }}
      - name: Hangar Release
        uses: milkdrinkers/Hangar-Publish@v1
        with:
          slug: ${{ vars.HANGAR_PROJECT_ID }}
          version: ${{ steps.metadata.outputs.version }}
          channel: 'Release'
          description: 'Release'
          api_token: ${{ secrets.HANGAR_TOKEN }}
          files: '[{"path":"./**/*.jar","platforms":["VELOCITY"]}]'
      - name: GitHub Release
        if: false
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./**/*.jar
