buildscript {
    configurations.classpath.resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'org.ow2.asm') {
            details.useVersion '9.5'
            details.because 'Shadow plugin needs ASM â‰¥9.5 to parse Java 21 classes'
        }
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id "fr.brouillard.oss.gradle.jgitver" version "+"
    id "com.github.johnrengelman.shadow" version "+"
}

//<editor-fold desc="Settings: Plugin">
repositories {
    maven {
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
}
dependencies {
    compileOnly "com.velocitypowered:velocity-api:${versionVelocity}"
    annotationProcessor "com.velocitypowered:velocity-api:${versionVelocity}"
}

apply from: 'https://raw.githubusercontent.com/code-lime/org.lime.core/refs/tags/2.0.10/global.gradle'
apply from: 'https://raw.githubusercontent.com/code-lime/org.lime.core/refs/tags/2.0.10/version.gradle'

println "Project version: $version"

configureTemplates([
        pluginName: "${name}",
        pluginId: "${name}".toLowerCase().replaceAll("[.:/]", "-"),
        bStatsId: "${bStatsId}",
])
tasks.withType(org.gradle.jvm.tasks.Jar).configureEach {
    archiveBaseName.set(project.name)
}
//</editor-fold>

configurations {
    relocate
}

//<editor-fold desc="Settings: Libraries">
//<editor-fold desc="Settings: Libraries: Netty (All)">
dependencies {
    implementation "io.netty:netty-codec:${versionNetty}"
    implementation "io.netty:netty-codec-haproxy:${versionNetty}"
    implementation "io.netty:netty-codec-http:${versionNetty}"
    implementation "io.netty:netty-handler:${versionNetty}"
    implementation "io.netty:netty-transport-native-epoll:${versionNetty}"
    implementation "io.netty:netty-transport-native-kqueue:${versionNetty}"
    implementation "io.netty:netty-transport-native-io_uring:${versionNetty}"
}
//</editor-fold>
//<editor-fold desc="Settings: Libraries: Adventure (Facet)">
dependencies {
    implementation "net.kyori:adventure-platform-facet:${versionAdventureFaset}"
}
//</editor-fold>
//<editor-fold desc="Settings: Libraries: BStats">
dependencies {
    compileOnly "org.bstats:bstats-velocity:${versionBStats}"
    relocate "org.bstats:bstats-velocity:${versionBStats}"
}
shadowJar {
    relocate 'org.bstats', "org.lime.velocircon.bstats"
}
//</editor-fold>
//</editor-fold>

shadowJar {
    archiveClassifier.set('')
    configurations = [project.configurations.relocate]
}
artifacts {
    archives tasks.shadowJar
}
